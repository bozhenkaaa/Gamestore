// <auto-generated />
using System;
using Gamestore.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamestore.DAL.Migrations
{
    [DbContext(typeof(GamestoreDbContext))]
    [Migration("20231008221052_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gamestore.Models.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("GenreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlatformId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameAlias")
                        .IsUnique();

                    b.HasIndex("GenreId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Gamestore.Models.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentGenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Races"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Misc"
                        },
                        new
                        {
                            Id = 9,
                            Name = "RTS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "TBS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Rally",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Arcade",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Formula",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 14,
                            Name = "Off-road",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 15,
                            Name = "FPS",
                            ParentGenreId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "TPS",
                            ParentGenreId = 5
                        });
                });

            modelBuilder.Entity("Gamestore.Models.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Browser"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("Gamestore.Models.Models.Game", b =>
                {
                    b.HasOne("Gamestore.Models.Models.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamestore.Models.Models.Platform", "Platform")
                        .WithMany("Games")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Gamestore.Models.Models.Genre", b =>
                {
                    b.HasOne("Gamestore.Models.Models.Genre", "ParentGenre")
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId");

                    b.Navigation("ParentGenre");
                });

            modelBuilder.Entity("Gamestore.Models.Models.Genre", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("SubGenres");
                });

            modelBuilder.Entity("Gamestore.Models.Models.Platform", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
